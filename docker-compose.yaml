# docker-compose file
version: '3'

services:
  discovery-server:
    image: amazoncorretto:11
    volumes:
      - ./apps/discovery-server/build/libs/discovery-server.jar:/app/discovery-server.jar
    working_dir: /app
    command: java -jar discovery-server.jar
    environment:
      - server.port=8761
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka/
    networks:
      - cineplex-network
    deploy:
      replicas: 1

  movie-catalog:
    image: amazoncorretto:11
    volumes:
      - ./apps/movie-catalog/build/libs/movie-catalog.jar:/app/movie-catalog.jar
    working_dir: /app
    command: java -jar movie-catalog.jar
    environment:
      - server.port=8080
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka/
    networks:
      - cineplex-network
    deploy:
      replicas: 1
  
  movie-info:
    image: amazoncorretto:11
    volumes:
        - ./apps/movie-info/build/libs/movie-info.jar:/app/movie-info.jar
    working_dir: /app
    command: java -jar movie-info.jar
    environment:
      - server.port=8080
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka/
    networks:
      - cineplex-network
    deploy:
      replicas: 1
  
  movie-ratings:
    image: amazoncorretto:11
    volumes:
        - ./apps/movie-ratings/build/libs/movie-ratings.jar:/app/movie-ratings.jar
    working_dir: /app
    command: java -jar movie-ratings.jar
    environment:
      - server.port=8080
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka/
    networks:
      - cineplex-network
    deploy:
      replicas: 1
    
networks:
  cineplex-network:
    driver: bridge

volumes:
  build: